spring:
  application:
    name: zuul

server:
  port: 8765

zuul:
  routes:
    product:  # zuul route Name 생성
      path: /products/**
      serviceId: product # eureka에서  instance name
      stripPrefix: false
    display:  # zuul route Name 생성
      path: /displays/**
      serviceId: display # eureka에서  instance name
      stripPrefix: false
  ribbon-isolation-strategy: thread
  thread-pool:
    use-separate-thread-pools: true # zuul ribbon에 의한 Instance가 Multi thread로 생성 되도록
    thread-pool-key-prefix: zuul-

eureka:
  instance:
    non-secure-port: ${server.port}
    prefer-ip-address: true # instance server IP로 보이도록
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 1000
    product: #위에 zuul routes에서 지정한 서비스 이름
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000
  threadpool:
    zuul-product: #위에 zuul routes에서 지정한 서비스 이름
      coreSize: 30
      maximumSize: 100
      allowMaximumSizeToDivergeFromCoreSize: true
    zuul-display:  #위에 zuul routes에서 지정한 서비스 이름
      coreSize: 30
      maximumSize: 100
      allowMaximumSizeToDivergeFromCoreSize: true

product: #product api server
  ribbon: # load balance
    MaxAutoRetriesNextServer: 1
    ReadTimeout: 3000
    ConnectTimeout: 1000
    MaxTotalConnections: 300
    MaxConnectionsPerHost: 100

display:
  ribbon: #load balance
    MaxAutoRetriesNextServer: 1
    ReadTimeout: 3000
    ConnectTimeout: 1000
    MaxTotalConnections: 300
    MaxConnectionsPerHost: 100